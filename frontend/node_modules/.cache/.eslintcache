[{"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/index.js":"1","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/reportWebVitals.js":"2","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/App.js":"3","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Logo.js":"4","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/NewUser.js":"5","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/UserInput.js":"6","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Language.js":"7","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Illustration.js":"8","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/pages/MeditationPage.js":"9","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Soundscape.js":"10","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Voice.js":"11","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Button.js":"12"},{"size":799,"mtime":1690710700223,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1690657481648,"results":"15","hashOfConfig":"14"},{"size":2981,"mtime":1690779027662,"results":"16","hashOfConfig":"14"},{"size":212,"mtime":1690710700223,"results":"17","hashOfConfig":"14"},{"size":220,"mtime":1690710700223,"results":"18","hashOfConfig":"14"},{"size":635,"mtime":1690657481652,"results":"19","hashOfConfig":"14"},{"size":1442,"mtime":1690657481655,"results":"20","hashOfConfig":"14"},{"size":244,"mtime":1690710700222,"results":"21","hashOfConfig":"14"},{"size":3105,"mtime":1690741703213,"results":"22","hashOfConfig":"14"},{"size":3082,"mtime":1690740055446,"results":"23","hashOfConfig":"14"},{"size":1061,"mtime":1690779954902,"results":"24","hashOfConfig":"14"},{"size":324,"mtime":1690657481654,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"8bkkqr",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/index.js",["64"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nvar audioElement = document.querySelector('audio');\n\nfunction togglePlay() {\n  if (audioElement.paused) {\n    audioElement.play().catch(function(error) {\n      console.log('Play action was interrupted:', error);\n    });\n  } else {\n    audioElement.pause();\n  }\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/reportWebVitals.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/App.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Logo.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/NewUser.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/UserInput.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Language.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Illustration.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/pages/MeditationPage.js",["65","66","67","68"],[],"import React, { useEffect, useRef, useState } from 'react';\n\nconst playImage = process.env.PUBLIC_URL + '/assets/Play_Button.png';\nconst pauseImage = process.env.PUBLIC_URL + '/assets/Pause_Button.png';\n\nfunction MeditationPage({ backgroundMusic, selectedVoice, goal, selectedLanguage }) {\n  const audioElementRef = useRef(null);\n  const [audioFetched, setAudioFetched] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    console.log('useEffect in MeditationPage ran');\n    console.log(`Background Music: ${backgroundMusic}`);\n    console.log(`Selected Voice: ${selectedVoice}`);\n    console.log(`Goal: ${goal}`);\n    console.log(`Selected Language: ${selectedLanguage}`);\n    \n    const fetchAndPlayAudio = async () => {\n      console.log('fetchAndPlayAudio function is called');\n      const audioElement = audioElementRef.current;\n\n      // Check if audio is already playing, then return\n      if (audioElement && !audioElement.paused) {\n        return;\n      }\n\n      if (audioFetched ) {\n        return; // Audio already fetched and played, no need to do it again.\n      }\n\n      var myHeaders = new Headers();\n      myHeaders.append('Content-Type', 'application/json');\n\n      var raw = JSON.stringify({\n        \"background\": backgroundMusic,\n        \"username\": \"test\",\n        \"goal\": goal,\n        \"voice_name\": selectedVoice,\n        \"language\": selectedLanguage\n      });\n\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow',\n      };\n\n      try {\n        const response = await fetch('https://ai-meditation.onrender.com/generate_meditation', requestOptions);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const audioBlob = await response.blob();\n        const audioUrl = URL.createObjectURL(audioBlob);\n\n        if (audioElement) {\n          audioElement.src = audioUrl;\n          audioElement.play();\n          setAudioFetched(true);\n        }\n      } catch (error) {\n        console.log('Fetch error: ', error);\n      }\n    };\n\n    fetchAndPlayAudio();\n  }, [backgroundMusic, selectedVoice, goal, selectedLanguage]);\n\n  const togglePlayPause = () => {\n    const audioElement = audioElementRef.current;\n    if (audioElement) {\n      if (isPlaying) {\n        audioElement.pause();\n        setIsPlaying(false);\n      } else {\n        audioElement.play().catch(function(error) {\n          setIsPlaying(false);\n        });\n        setIsPlaying(true);\n      }\n    }\n  };\n  \n  return (\n    <div className=\"meditation-page\">\n      {/* <h2>Meditation Page</h2> */}\n      <audio ref={audioElementRef} controls>\n        Your browser does not support the audio element.\n      </audio>\n      {/* Add your meditation content here */}\n      {/* <div>\n        <img \n          src={isPlaying ? pauseImage : playImage} \n          alt={isPlaying ? 'Pause' : 'Play'} \n          onClick={togglePlayPause} \n          style={{cursor: 'pointer'}}\n        />\n      </div> */}\n    </div>\n  );\n}\n\nexport default MeditationPage;\n","/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Soundscape.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Voice.js",[],[],"/Users/somesh/Downloads/code/elevenlabs_lablab/frontend/src/components/Button.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":16,"column":10,"nodeType":"71","messageId":"72","endLine":16,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":3,"column":7,"nodeType":"71","messageId":"72","endLine":3,"endColumn":16},{"ruleId":"69","severity":1,"message":"74","line":4,"column":7,"nodeType":"71","messageId":"72","endLine":4,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":70,"column":6,"nodeType":"77","endLine":70,"endColumn":62,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":72,"column":9,"nodeType":"71","messageId":"72","endLine":72,"endColumn":24},"no-unused-vars","'togglePlay' is defined but never used.","Identifier","unusedVar","'playImage' is assigned a value but never used.","'pauseImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'audioFetched'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'togglePlayPause' is assigned a value but never used.",{"desc":"81","fix":"82"},"Update the dependencies array to be: [backgroundMusic, selectedVoice, goal, selectedLanguage, audioFetched]",{"range":"83","text":"84"},[2162,2218],"[backgroundMusic, selectedVoice, goal, selectedLanguage, audioFetched]"]